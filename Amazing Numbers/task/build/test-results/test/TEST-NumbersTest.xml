<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="NumbersTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2023-09-26T12:18:40" hostname="MacBook-Pro-uzivatela-Cuninka.local" time="1.463">
  <properties/>
  <testcase name="start" classname="NumbersTest" time="1.463">
    <failure message="java.lang.AssertionError: Exception in test #29&#10;&#10;java.lang.IllegalArgumentException: No enum constant numbers.Main.Property.MAY&#10;&#9;at java.base/java.lang.Enum.valueOf(Enum.java:273)&#10;&#9;at numbers.Main$Property.valueOf(Main.java:8)&#10;&#9;at numbers.Main.main(Main.java:54)&#10;&#10;Please find below the output of your program during this failed test.&#10;Note that the '&gt;' character indicates the beginning of the input line.&#10;&#10;---&#10;&#10;Welcome to Amazing Numbers!&#10;&#10;Supported requests:&#10;- enter a natural number to know its properties;&#10;- enter two natural numbers to obtain the properties of the list:&#10;  * the first parameter represents a starting number;&#10;  * the second parameter shows how many consecutive numbers are to be printed;&#10;- two natural numbers and properties to search for;&#10;- a property preceded by minus must not be present in numbers;&#10;- separate the parameters with one space;&#10;- enter 0 to exit.&#10;&#10;Enter a request: &gt; &gt; 1 10 May" type="java.lang.AssertionError">java.lang.AssertionError: Exception in test #29

java.lang.IllegalArgumentException: No enum constant numbers.Main.Property.MAY
	at java.base/java.lang.Enum.valueOf(Enum.java:273)
	at numbers.Main$Property.valueOf(Main.java:8)
	at numbers.Main.main(Main.java:54)

Please find below the output of your program during this failed test.
Note that the '&gt;' character indicates the beginning of the input line.

---

Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: &gt; &gt; 1 10 May
	at org.junit.Assert.fail(Assert.java:89)
	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:203)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 0
?[1;31m
Start test 2?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > -76

The first parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 3?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > -19

The first parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 4?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > -21

The first parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 5?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > -93

The first parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 6?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > -91

The first parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 7?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 18772 -13518

The second parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 8?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 17710 -420

The second parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 9?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 2269 -28552

The second parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 10?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 26454 -25404

The second parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 11?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 25039 -1669

The second parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 12?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 7632 -8363

The second parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 13?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 19722 -15429

The second parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 14?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 8486 -28760

The second parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 15?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 4734 -23895

The second parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 16?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 23656 -16413

The second parameter should be a natural number or zero.

Enter a request: > > 0
?[1;31m
Start test 17?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 1

Properties of 1
        buzz: false
        duck: false
 palindromic: true
      gapful: false
         spy: true
      square: true
       sunny: false
        even: false
         odd: true
     jumping: true
       happy: true
         sad: false

Enter a request: > > 2

Properties of 2
        buzz: false
        duck: false
 palindromic: true
      gapful: false
         spy: true
      square: false
       sunny: false
        even: true
         odd: false
     jumping: true
       happy: false
         sad: true

Enter a request: > > 3

Properties of 3
        buzz: false
        duck: false
 palindromic: true
      gapful: false
         spy: true
      square: false
       sunny: true
        even: false
         odd: true
     jumping: true
       happy: false
         sad: true

Enter a request: > > 4

Properties of 4
        buzz: false
        duck: false
 palindromic: true
      gapful: false
         spy: true
      square: true
       sunny: false
        even: true
         odd: false
     jumping: true
       happy: false
         sad: true

Enter a request: > > 5

Properties of 5
        buzz: false
        duck: false
 palindromic: true
      gapful: false
         spy: true
      square: false
       sunny: false
        even: false
         odd: true
     jumping: true
       happy: false
         sad: true

Enter a request: > > 6

Properties of 6
        buzz: false
        duck: false
 palindromic: true
      gapful: false
         spy: true
      square: false
       sunny: false
        even: true
         odd: false
     jumping: true
       happy: false
         sad: true

Enter a request: > > 7

Properties of 7
        buzz: true
        duck: false
 palindromic: true
      gapful: false
         spy: true
      square: false
       sunny: false
        even: false
         odd: true
     jumping: true
       happy: true
         sad: false

Enter a request: > > 8

Properties of 8
        buzz: false
        duck: false
 palindromic: true
      gapful: false
         spy: true
      square: false
       sunny: true
        even: true
         odd: false
     jumping: true
       happy: false
         sad: true

Enter a request: > > 9

Properties of 9
        buzz: false
        duck: false
 palindromic: true
      gapful: false
         spy: true
      square: true
       sunny: false
        even: false
         odd: true
     jumping: true
       happy: false
         sad: true

Enter a request: > > 10

Properties of 10
        buzz: false
        duck: true
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: true
         odd: false
     jumping: true
       happy: true
         sad: false

Enter a request: > > 11

Properties of 11
        buzz: false
        duck: false
 palindromic: true
      gapful: false
         spy: false
      square: false
       sunny: false
        even: false
         odd: true
     jumping: false
       happy: false
         sad: true

Enter a request: > > 12

Properties of 12
        buzz: false
        duck: false
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: true
         odd: false
     jumping: true
       happy: false
         sad: true

Enter a request: > > 13

Properties of 13
        buzz: false
        duck: false
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: false
         odd: true
     jumping: false
       happy: true
         sad: false

Enter a request: > > 14

Properties of 14
        buzz: true
        duck: false
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: true
         odd: false
     jumping: false
       happy: false
         sad: true

Enter a request: > > 5933338616805183105

Properties of 5933338616805183105
        buzz: false
        duck: true
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: false
         odd: true
     jumping: false
       happy: false
         sad: true

Enter a request: > > 6393714766504180600

Properties of 6393714766504180600
        buzz: false
        duck: true
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: true
         odd: false
     jumping: false
       happy: true
         sad: false

Enter a request: > > 2217009269740915245

Properties of 2217009269740915245
        buzz: false
        duck: true
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: false
         odd: true
     jumping: false
       happy: false
         sad: true

Enter a request: > > 3183130516114449751

Properties of 3183130516114449751
        buzz: false
        duck: true
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: false
         odd: true
     jumping: false
       happy: false
         sad: true

Enter a request: > > 3673125092095684875

Properties of 3673125092095684875
        buzz: false
        duck: true
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: false
         odd: true
     jumping: false
       happy: false
         sad: true

Enter a request: > > 4988426961105980626

Properties of 4988426961105980626
        buzz: false
        duck: true
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: true
         odd: false
     jumping: false
       happy: false
         sad: true

Enter a request: > > 1781028949791697276

Properties of 1781028949791697276
        buzz: false
        duck: true
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: true
         odd: false
     jumping: false
       happy: false
         sad: true

Enter a request: > > 4214217196164917137

Properties of 4214217196164917137
        buzz: true
        duck: false
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: false
         odd: true
     jumping: false
       happy: false
         sad: true

Enter a request: > > 4779955068661821775

Properties of 4779955068661821775
        buzz: false
        duck: true
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: false
         odd: true
     jumping: false
       happy: false
         sad: true

Enter a request: > > 4499629849674858055

Properties of 4499629849674858055
        buzz: false
        duck: true
 palindromic: false
      gapful: false
         spy: false
      square: false
       sunny: false
        even: false
         odd: true
     jumping: false
       happy: false
         sad: true

Enter a request: > > 0
?[1;31m
Start test 18?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 1 15

              1 is palindromic, spy, square, odd, jumping, happy
              2 is palindromic, spy, even, jumping, sad
              3 is palindromic, spy, sunny, odd, jumping, sad
              4 is palindromic, spy, square, even, jumping, sad
              5 is palindromic, spy, odd, jumping, sad
              6 is palindromic, spy, even, jumping, sad
              7 is buzz, palindromic, spy, odd, jumping, happy
              8 is palindromic, spy, sunny, even, jumping, sad
              9 is palindromic, spy, square, odd, jumping, sad
             10 is duck, even, jumping, happy
             11 is palindromic, odd, sad
             12 is even, jumping, sad
             13 is odd, happy
             14 is buzz, even, sad
             15 is sunny, odd, sad

Enter a request: > > 0
?[1;31m
Start test 19?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 7715009249581355457 10

7715009249581355457 is buzz, duck, odd, sad
7715009249581355458 is duck, even, sad
7715009249581355459 is duck, odd, sad
7715009249581355460 is duck, even, sad
7715009249581355461 is duck, odd, sad
7715009249581355462 is duck, even, sad
7715009249581355463 is buzz, duck, odd, sad
7715009249581355464 is duck, even, sad
7715009249581355465 is duck, odd, sad
7715009249581355466 is duck, even, sad

Enter a request: > > 0
?[1;31m
Start test 20?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 2442866350620778999 12

2442866350620778999 is buzz, duck, odd, happy
2442866350620779000 is duck, gapful, even, sad
2442866350620779001 is duck, odd, sad
2442866350620779002 is duck, even, sad
2442866350620779003 is duck, odd, sad
2442866350620779004 is duck, even, sad
2442866350620779005 is duck, odd, sad
2442866350620779006 is buzz, duck, even, sad
2442866350620779007 is buzz, duck, odd, happy
2442866350620779008 is duck, even, sad
2442866350620779009 is duck, odd, sad
2442866350620779010 is duck, even, sad

Enter a request: > > 0
?[1;31m
Start test 21?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 5296562653588400619 6

5296562653588400619 is duck, odd, sad
5296562653588400620 is duck, even, happy
5296562653588400621 is buzz, duck, odd, sad
5296562653588400622 is duck, even, sad
5296562653588400623 is duck, odd, sad
5296562653588400624 is duck, even, sad

Enter a request: > > 0
?[1;31m
Start test 22?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 3050903595557750324 4

3050903595557750324 is buzz, duck, even, sad
3050903595557750325 is duck, odd, sad
3050903595557750326 is duck, even, sad
3050903595557750327 is buzz, duck, odd, happy

Enter a request: > > 0
?[1;31m
Start test 23?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 6816856115732755928 14

6816856115732755928 is even, sad
6816856115732755929 is gapful, odd, sad
6816856115732755930 is duck, even, sad
6816856115732755931 is odd, sad
6816856115732755932 is buzz, even, sad
6816856115732755933 is odd, sad
6816856115732755934 is even, happy
6816856115732755935 is odd, happy
6816856115732755936 is even, sad
6816856115732755937 is buzz, odd, sad
6816856115732755938 is even, sad
6816856115732755939 is buzz, odd, sad
6816856115732755940 is duck, even, sad
6816856115732755941 is odd, sad

Enter a request: > > 0
?[1;31m
Start test 24?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 5979657672551467399 14

5979657672551467399 is odd, sad
5979657672551467400 is duck, gapful, even, sad
5979657672551467401 is buzz, duck, odd, sad
5979657672551467402 is duck, even, sad
5979657672551467403 is duck, odd, sad
5979657672551467404 is duck, even, sad
5979657672551467405 is duck, odd, sad
5979657672551467406 is duck, even, sad
5979657672551467407 is buzz, duck, odd, sad
5979657672551467408 is buzz, duck, gapful, even, sad
5979657672551467409 is duck, odd, sad
5979657672551467410 is duck, even, sad
5979657672551467411 is odd, sad
5979657672551467412 is even, happy

Enter a request: > > 0
?[1;31m
Start test 25?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 453106921323331980 10

453106921323331980 is duck, even, sad
453106921323331981 is duck, odd, sad
453106921323331982 is buzz, duck, even, sad
453106921323331983 is duck, odd, happy
453106921323331984 is duck, even, sad
453106921323331985 is duck, odd, sad
453106921323331986 is duck, even, sad
453106921323331987 is buzz, duck, odd, sad
453106921323331988 is duck, even, sad
453106921323331989 is buzz, duck, odd, happy

Enter a request: > > 0
?[1;31m
Start test 26?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 6524780590267149580 1

6524780590267149580 is duck, even, sad

Enter a request: > > 0
?[1;31m
Start test 27?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 3312644932686631412 10

3312644932686631412 is even, sad
3312644932686631413 is odd, sad
3312644932686631414 is even, sad
3312644932686631415 is odd, happy
3312644932686631416 is buzz, even, sad
3312644932686631417 is buzz, odd, sad
3312644932686631418 is even, sad
3312644932686631419 is odd, sad
3312644932686631420 is duck, even, sad
3312644932686631421 is odd, sad

Enter a request: > > 0
?[1;31m
Start test 28?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 8312397020697595031 4

8312397020697595031 is duck, odd, sad
8312397020697595032 is duck, even, sad
8312397020697595033 is duck, odd, happy
8312397020697595034 is duck, even, sad

Enter a request: > > 0
?[1;31m
Start test 29?[0m
Welcome to Amazing Numbers!

Supported requests:
- enter a natural number to know its properties;
- enter two natural numbers to obtain the properties of the list:
  * the first parameter represents a starting number;
  * the second parameter shows how many consecutive numbers are to be printed;
- two natural numbers and properties to search for;
- a property preceded by minus must not be present in numbers;
- separate the parameters with one space;
- enter 0 to exit.

Enter a request: > > 1 10 May

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
